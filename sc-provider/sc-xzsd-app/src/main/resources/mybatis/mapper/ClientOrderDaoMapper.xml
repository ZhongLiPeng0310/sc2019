<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.app.client.clientOrder.dao.ClientOrderDao">

    <!--新增订单评价-->
    <insert id="saveOrdersAppraise" useGeneratedKeys="true" parameterType="java.util.List">
        <selectKey resultType="long" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        insert into t_goods_appraise
        (
        appraise_code,
        order_code,
        goods_code,
        appraise_detail,
        a_level,
        user_code,
        is_deleted,
        create_time,
        create_name,
        version)
        values
        <foreach collection="goodsAppraiseInfoList" item="appraise" separator="," index="index" >
            (
            #{appraise.appraiseCode},
            #{appraise.orderCode},
            #{appraise.goodsCode},
            #{appraise.appraiseDetail},
            #{appraise.appraiseLevel},
            #{appraise.userId},
            #{appraise.isDeleted},
            #{appraise.createTime},
            #{appraise.userId},
            #{appraise.version}
            )
        </foreach>
    </insert>

    <!--修改客户端订单状态-->
    <update id="updateOrderState" parameterType="com.xzsd.app.client.clientOrder.entity.ClientOrderInfo">
        update t_order
        set
        order_state = #{orderState},
        update_time = now(),
        update_name = #{userId},
        version = version + 1
        where
        order_code = #{orderCode}
    </update>
    <!--新增订单-->
    <insert id="saveOrder" parameterType="com.xzsd.app.client.clientOrder.entity.ClientOrderInfo">
        insert into
        t_order
        (
        order_code,
        user_code,
        order_money,
        order_state,
        store_code,
        sum_goods,
        is_deleted,
        create_time,
        create_name,
        version
        )
        values
        (
        #{orderCode},
        #{createName},
        #{orderMoney},
        7,
        #{storeCode},
        1,
        #{isDeleted},
        now(),
        #{createName},
        0
        )
    </insert>
    <!--新增订单信息到详情表-->
    <insert id="saveOrderDeatail" parameterType="com.xzsd.app.client.clientOrder.entity.ClientOrderInfo">
        insert into
        t_order_detail
        (
        order_code,
        user_code,
        goods_code,
        order_sum,
        cart_code,
        is_deleted,
        create_time,
        create_name,
        version
        )
        values
        (
        #{orderCode},
        #{createName},
        #{goodsCode},
        #{orderSum},
        0,
        #{isDeleted},
        now(),
        #{createName},
        0
        )
    </insert>
    <!--修改下单商品的库存数量-->
    <update id="updateStock" parameterType="com.xzsd.app.client.clientOrder.entity.ClientOrderInfo">
        update
        t_goods
        set
        stock = #{stock} - #{sumOrder}
        where
        goods_code = #{goodsCode}
    </update>
   <!--获取该商品的库存-->
   <select id="nowStock" parameterType="com.xzsd.app.client.clientOrder.entity.ClientOrderInfo" resultType="int">
       select
       stock
       from
       t_goods
       where
       goods_code = #{goodsCode}
   </select>
    <!--增加该商品的销售量-->
    <update id="updateSumSale" parameterType="com.xzsd.app.client.clientOrder.entity.ClientOrderInfo">
        update
        t_goods
        set
        sum_sale = #{sumSale} + #{sumOrder}
        where
        goods_code = #{goodsCode}
    </update>
    <!--获取当前商品的销售量-->
    <select id="getSumSale" parameterType="com.xzsd.app.client.clientOrder.entity.ClientOrderInfo" resultType="int">
        select
        sum_sale
        from
        t_goods
        where
        goods_code = #{goodsCode}
    </select>
    <!--订单对应商品的Map-->
    <resultMap id="getOrderDetail" type="com.xzsd.app.client.clientOrder.entity.ClientOrderInfo">
        <id column="order_code" property="orderCode" jdbcType="VARCHAR" />
        <result column="order_money" property="orderMoney" jdbcType="VARCHAR" />
        <result column="order_state" property="orderState" jdbcType="VARCHAR" />
        <result column="sum_goods" property="sumGoods" jdbcType="VARCHAR" />
        <result column="order_sum" property="orderSum" jdbcType="VARCHAR" />
        <result column="store_code" property="storeCode" jdbcType="VARCHAR" />
        <result column="address" property="address" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="VARCHAR" />
        <collection property="goodsList" ofType="com.xzsd.app.client.clientOrder.entity.GoodsInfo">
            <id column="goodsCode" property="goodsCode" jdbcType="VARCHAR" />
            <result column="goodsName" property="goodsName" jdbcType="VARCHAR" />
            <result column="imagePath" property="imagePath" jdbcType="VARCHAR" />
            <result column="salePrice" property="salePrice" jdbcType="VARCHAR" />
            <result column="orderSum" property="orderSum" jdbcType="VARCHAR" />
            <result column="goodsIntroduce" property="goodsIntroduce" jdbcType="VARCHAR" />
        </collection>
    </resultMap>
    <!--查询订单详情-->
    <select id="getOrdersByCode" parameterType="java.lang.String" resultMap="getOrderDetail">
        select
        a.order_code,
        a.order_money,
        a.order_state,
        a.sum_goods,
        a.store_code,
        d.address,
        a.create_time,
        b.goods_code goodsCode,
        c.goods_name goodsName,
        c.imageurl imagePath,
        c.sale_price salePrice,
        c.goods_introduce goodsIntroduce,
        b.order_sum orderSum
        from
        t_order a
        LEFT JOIN t_order_detail b
        on a.order_code = b.order_code
        LEFT JOIN t_goods c
        on b.goods_code = c.goods_code
        LEFT JOIN t_store d
        on a.store_code = d.store_code
        where
        a.is_deleted = 0
        and
        a.order_code = #{orderCode}
    </select>

    <!--客户查询订单列表-->
    <resultMap id="getOrdersList" type="com.xzsd.app.client.clientOrder.entity.ClientOrderInfo">
        <id property="orderCode" column="order_code" jdbcType="VARCHAR"/>
        <result property="userCode" column="user_code" jdbcType="VARCHAR"/>
        <result property="orderState" column="order_state" jdbcType="VARCHAR"/>
        <result property="orderMoney" column="order_money" jdbcType="VARCHAR"/>
        <result column="sum_goods" property="sumGoods" jdbcType="VARCHAR" />
        <collection property="goodsList" ofType="com.xzsd.app.client.clientOrder.entity.GoodsInfo" select="selectGoods" column="order_code">
            <id property="goodsCode" column="goods_code" jdbcType="VARCHAR"/>
            <result property="goodsName" column="goods_name" jdbcType="VARCHAR"/>
            <result property="imagePath" column="imageurl" jdbcType="VARCHAR"/>
            <result property="salePrice" column="sale_price" jdbcType="VARCHAR"/>
            <result column="order_sum" property="orderSum" jdbcType="VARCHAR" />
            <result column="goods_introduce" property="goodsIntroduce" jdbcType="VARCHAR" />
        </collection>
    </resultMap>
    <select id="getOrdersList" parameterType="com.xzsd.app.client.clientOrder.entity.ClientOrderInfo" resultMap="getOrdersList">
        select
        a.order_code,
        a.user_code,
        a.order_state,
        a.order_money,
        a.sum_goods
        from
        t_order a
        where
        a.is_deleted = 0
        and
        a.user_code = #{userId}
        <if test="orderState != null and orderState != '' and orderState == 7">
            and a.order_state = 7
        </if>
        <if test="orderState != null and orderState != '' and orderState == 1 ">
            and a.order_state = 1
        </if>
        <if test="orderState != null and orderState != '' and orderState == 5">
            and a.order_state = 5
        </if>
        order by
        a.create_time
        desc
    </select>
    <select id="selectGoods" parameterType="com.xzsd.app.client.clientOrder.entity.ClientOrderInfo" resultType="com.xzsd.app.client.clientOrder.entity.GoodsInfo">
		select
		a.goods_code goodsCode,
		b.goods_name goodsName,
		b.sale_price salePrice,
		b.imageurl imagePath,
		b.goods_introduce goodsIntroduce,
		a.order_sum orderSum
		from
		t_order_detail a
		LEFT JOIN t_goods b
		on a.goods_code = b.goods_code
		LEFT JOIN t_order c
		on a.order_code = c.order_code
		where
		a.order_code = #{orderCode}
		order by
		a.create_time
		desc
	</select>

    <!--新增订单到订单表-->
    <insert id="saveCartOrder" parameterType="com.xzsd.app.client.clientOrder.entity.CartOrderInfo">
        insert into
        t_order
        (
        order_code,
        user_code,
        order_money,
        order_state,
        store_code,
        sum_goods,
        is_deleted,
        create_time,
        create_name,
        version
        )
        values
        (
        #{orderCode},
        #{userId},
        #{orderMoney},
        7,
        #{storeCode},
        #{sumGoods},
        0,
        now(),
        #{userId},
        0
        )
    </insert>

    <!--新增订单到订单详情表-->
    <insert id="saveCartOrderDetail" useGeneratedKeys="true" parameterType="java.util.List">
        <selectKey resultType="long" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        insert into
        t_order_detail
        (
        detail_code,
        order_code,
        user_code,
        goods_code,
        order_sum,
        cart_code,
        is_deleted,
        create_time,
        create_name,
        version
        )
        values
        <foreach collection="cartOrderInfoList" item="order" separator="," index="index" >
            (
            #{order.detailCode},
            #{order.orderCode},
            #{order.userId},
            #{order.goodsCode},
            #{order.orderSum},
            #{order.cartCode},
            0,
            #{order.createTime},
            #{order.userId},
            #{order.version}
            )
        </foreach>
    </insert>
    <!--删除对应商品的购物车-->
    <update id="updateCartGoods" parameterType="com.xzsd.app.client.clientOrder.entity.CartOrderInfo">
        update t_cart
        set
        is_deleted = 1,
        update_time = now(),
        update_name = #{userId},
        version = version + 1
        where cart_code in
        <foreach item="item" index="index" collection="listCart" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
</mapper>
