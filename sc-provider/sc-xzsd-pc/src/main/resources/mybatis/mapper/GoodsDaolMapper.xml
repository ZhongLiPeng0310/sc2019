<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.pc.goods.dao.GoodsDao">

    <!--统计商品书号数量，校验书号是否已存在商品中-->
    <select id="countIsbn" parameterType="com.xzsd.pc.goods.entity.GoodsInfo" resultType="int">
        select count(isbn)
        from t_goods
        where is_deleted = 0
        and isbn = #{isbn}
        <if test="goodsCode != null and goodsCode != ''">
            and goods_code != #{goodsCode}
        </if>
    </select>

    <!--新增商品-->
    <insert id="saveGoods" parameterType="com.xzsd.pc.goods.entity.GoodsInfo">
        insert into t_goods
        (goods_code,
         goods_name,
         cost_price,
         sale_price,
         sum_sale,
         class_first_code,
         class_second_code,
         advertisement,
         goods_introduce,
         goods_state,
         browse,
         store_code,
         stock,
         isbn,
         author,
         publisher,
         imageurl,
         a_level,
         is_deleted,
         create_name,
         create_time,
         version)
        values
           (#{goodsCode},
            #{goodsName},
            #{costPrice},
            #{salePrice},
            0,
            #{classFirstCode},
            #{classSecondCode},
            #{advertisement},
            #{goodsIntroduce},
            3,
            0,
            #{storeCode},
            #{stock},
            #{isbn},
            #{author},
            #{publisher},
            #{imagePath},
            5,
            #{isDeleted},
            #{createName},
            now(),
            0)
    </insert>

   <!--商品列表-->
   <select id="listGoodsByPage" parameterType="com.xzsd.pc.goods.entity.GoodsInfo" resultType="com.xzsd.pc.goods.entity.GoodsInfo">
    select
        a.goods_code goodsCode,
        a.goods_name goodsName,
        a.cost_price costPrice,
        a.sale_price salePrice,
        a.sum_sale sumSale,
        a.class_first_code classFirstCode,
        b.class_name classFirstName,
        a.class_second_code classSecondCode,
        c.class_name classSecondName,
        a.advertisement advertisement,
        a.goods_introduce goodsIntroduce,
        a.goods_state goodsState,
        a.up_time upTime,
        a.browse browse,
        a.store_code storeCode,
        d.store_name storeName,
        a.stock stock,
        a.isbn isbn,
        a.author author,
        a.publisher publisher,
        a.imageurl imagePath,
        a.is_deleted isDeleted,
        a.create_time createTime,
        a.create_name createName,
        a.update_time updateTime,
        a.update_name updateName,
        a.version version
    from
        t_goods a
    LEFT JOIN t_goods_class b
    on a.class_first_code = b.class_code
    LEFT JOIN t_goods_class c
    on a.class_second_code = c.class_code
    LEFT JOIN t_store d
    on a.store_code = d.store_code
    where a.is_deleted = 0
    <if test="goodsState != null and goodsState != ''">
     and a.goods_state like concat('%', #{goodsState}, '%')
    </if>
    <if test="goodsName != null and goodsName != ''">
     and a.goods_name like concat('%', #{goodsName}, '%')
    </if>
    <if test="advertisement != null and advertisement != ''">
     and a.advertisement like concat('%', #{advertisement}, '%')
    </if>
    <if test="publisher != null and publisher != ''">
    and a.publisher like concat('%', #{publisher}, '%')
    </if>
    <if test="author != null and author != ''">
    and a.author like concat('%', #{author}, '%')
    </if>
    order by a.create_time desc
   </select>

  <!--修改商品信息-->
  <update id="updateGoods" parameterType="com.xzsd.pc.goods.entity.GoodsInfo">
    update t_goods
    set
         goods_name = #{goodsName},
         cost_price = #{costPrice},
         sale_price = #{salePrice},
         sum_sale = #{sumSale},
         class_first_code = #{classFirstCode},
         class_second_code = #{classSecondCode},
         advertisement = #{advertisement},
         goods_introduce = #{goodsIntroduce},
         goods_state = #{goodsState},
         browse = #{browse},
         store_code = #{storeCode},
         stock = #{stock},
         isbn = #{isbn},
         author = #{author},
         publisher = #{publisher},
         imageurl = #{imagePath},
         update_name = #{updateName},
         update_time = now(),
         version = version + 1
    where goods_code = #{goodsCode}
    and version = #{version}
  </update>

<!--    &lt;!&ndash;检验删除的商品是否存在轮播图中&ndash;&gt;-->
<!--    <select id="findGoodsPicShow" parameterType="com.xzsd.pc.pictureShow.entity.PictureShowInfo" resultType="int">-->
<!--        select count(a.goods_code)-->
<!--        from-->
<!--        t_picture_show a LEFT JOIN t_goods b-->
<!--        on a.goods_code = b.goods_code-->
<!--        where-->
<!--        a.goods_code in-->
<!--        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">-->
<!--            #{item}-->
<!--        </foreach>-->
<!--        and-->
<!--        a.is_deleted = 0-->
<!--    </select>-->
<!--    &lt;!&ndash;检验删除的商品是否存在热门商品中&ndash;&gt;-->
<!--    <select id="findGoodsHotGoods" parameterType="com.xzsd.pc.pictureShow.entity.PictureShowInfo" resultType="int">-->
<!--        select -->
<!--        count(a.goods_code)-->
<!--        from-->
<!--        t_hot_goods a LEFT JOIN t_goods b-->
<!--        on a.goods_code = b.goods_code-->
<!--        where-->
<!--        a.goods_code in-->
<!--        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">-->
<!--            #{item}-->
<!--        </foreach>-->
<!--        and-->
<!--        a.is_deleted = 0-->
<!--    </select>-->

    <!--查询在轮播图和热门商品的商品名称-->
    <select id="listHotShow" parameterType="java.lang.String" resultType="java.lang.String">
        select
        distinct
        goods_code
        from t_goods
        where is_deleted = 0
        and goods_code in
        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">
            #{item}
        </foreach>
        and (goods_code in
        (select goods_code from t_hot_goods where is_deleted = 0)
        or goods_code in
        (select goods_code from t_picture_show where is_deleted = 0))
    </select>
    <!--删除商品-->
    <update id="deleteGoods" parameterType="com.xzsd.pc.goods.entity.GoodsInfo">
        update t_goods
        set
            is_deleted = 1,
            update_time = now(),
            update_name = #{userId},
            version = version + 1
        where goods_code in
        <foreach item="item" index="index" collection="listGoodsCode" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!--修改商品上架下架-->
    <update id="updateGoodsState" parameterType="com.xzsd.pc.goods.entity.GoodsInfo">
        update t_goods
        set
            goods_state = #{goodsState},
            update_time = now(),
        <if test="goodsState != null and goodsState != '' and goodsState == 2">
            up_time = now(),
        </if>
            update_name = #{userId},
            version = version + 1
        where goods_code in
        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">
            #{item}
        </foreach>
        and version in
        <foreach item="item" index="index" collection="listVersion" open="(" separator="," close=")">
            #{item}
        </foreach>

    </update>

    <!--查询商品信息-->
    <select id="getGoodsByGoodsCode" parameterType="java.lang.String" resultType="com.xzsd.pc.goods.entity.GoodsInfo">
        select
             a.goods_code goodsCode,
             a.goods_name goodsName,
             a.cost_price costPrice,
             a.sale_price salePrice,
             a.sum_sale sumSale,
             a.class_first_code classFirstCode,
             b.class_name classFirstName,
             a.class_second_code classSecondCode,
             c.class_name classSecondName,
             a.advertisement,
             a.goods_introduce goodsIntroduce,
             a.goods_state goodsState,
             a.up_time upTime,
             a.browse browse,
             a.store_code storeCode,
             a.stock stock,
             a.isbn isbn,
             a.author author,
             a.publisher publisher,
             a.imageurl imagePath,
             a.create_time createTime,
             a.create_name createName,
             a.update_time updateTime,
             a.update_name updateName,
             a.version version
         from t_goods a
         LEFT JOIN t_goods_class b
         on a.class_first_code = b.class_code
         LEFT JOIN t_goods_class c
         on a.class_second_code = c.class_code
         where a.goods_code = #{goodsCode}
         and a.is_deleted = 0
    </select>

    <!--查询一级分类列表-->
    <select id="getFirstClass" parameterType="com.xzsd.pc.goodsclass.entity.GoodsClassInfo" resultType="com.xzsd.pc.goodsclass.entity.GoodsClassInfo">
        select
        a.class_name classFirstName,
        a.class_code classFirstCode,
        a.version version
        from t_goods_class a
        where a.is_deleted = 0
        and a.last_class_code is null
        order by create_time desc
    </select>

    <!--查询二级分类列表-->
    <select id="getSecondClass" parameterType="java.lang.String" resultType="com.xzsd.pc.goodsclass.entity.GoodsClassInfo">
        select
        a.class_name classSecondName,
        a.class_code classSecondCode,
        a.version version
        from t_goods_class a
        where a.is_deleted = 0
        and a.last_class_code = #{lastClassCode}
        order by
        create_time desc
    </select>

    <!--查询门店列表-->
    <select id="getAllStore" parameterType="com.xzsd.pc.store.entity.StoreInfo" resultType="com.xzsd.pc.store.entity.StoreInfo">
        select
        a.store_code storeCode,
        a.store_name storeName,
        a.version verison
        from
        t_store a
        where
        a.is_deleted = 0
    </select>
</mapper>