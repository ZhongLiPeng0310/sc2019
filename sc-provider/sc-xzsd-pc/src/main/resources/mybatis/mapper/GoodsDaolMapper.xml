<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.pc.goods.dao.GoodsDao">

    <!--统计商品书号数量，校验书号是否已存在商品中-->
    <select id="countIsbn" parameterType="com.xzsd.pc.goods.entity.GoodsInfo" resultType="int">
        select count(isbn)
        from t_goods
        where is_deleted = 0
        and isbn = #{isbn}
    </select>

    <!--新增商品-->
    <insert id="saveGoods" parameterType="com.xzsd.pc.goods.entity.GoodsInfo">
        insert into t_goods
        (goods_code,
         goods_name,
         cost_price,
         sale_price,
         sum_sale,
         class_code,
         advertisement,
         goods_introduce,
         goods_state,
         up_time,
         browse,
         store_code,
         stock,
         isbn,
         author,
         publisher,
         imageurl,
         is_deleted,
         create_name,
         create_time,
         version)
        values
           (#{goodsCode},
            #{goodsName},
            #{costPrice},
            #{salePrice},
            0,
            #{classCode},
            #{advertisement},
            #{goodsIntroduce},
            1,
            now(),
            0,
            #{storeCode},
            100,
            #{isbn},
            #{author},
            #{publisher},
            #{imageurl},
            #{isDeleted},
            #{createName},
            now(),
            0)
    </insert>

   <!--商品列表-->
   <select id="listGoodsByPage" parameterType="com.xzsd.pc.goods.entity.GoodsInfo" resultType="com.xzsd.pc.goods.entity.GoodsInfo">
    select
        a.goods_code goodsCode,
        a.goods_name goodsName,
        a.cost_price costPrice,
        a.sale_price salePrice,
        a.sum_sale sumPrice,
        a.class_code classCode,
        a.advertisement advertisement,
        a.goods_introduce goodsIntroduce,
        a.goods_state goodsState,
        a.up_time upTime,
        a.browse browse,
        a.store_code storeCode,
        a.stock stock,
        a.isbn isbn,
        a.author author,
        a.publisher publisher,
        a.imageurl imageurl,
        a.is_deleted isDeleted,
        a.create_name createName,
        a.create_time creaTime,
        a.version
    from
        t_goods a
    where a.is_deleted = 0
    <if test="goodsState != null and goodsState != ''">
     and a.goods_state like concat('%', #{goodsState}, '%')
    </if>
    <if test="goodsName != null and goodsName != ''">
     and a.goods_name like concat('%', #{goodsName}, '%')
    </if>
    <if test="goodsIntroduce != null and goodsIntroduce != ''">
     and a.goods_introduce like concat('%', #{goodsIntroduce}, '%')
    </if>
    <if test="publisher != null and publisher != ''">
    and a.publisher like concat('%', #{publisher}, '%')
    </if>
    <if test="author != null and author != ''">
    and a.author like concat('%', #{author}, '%')
    </if>
    order by create_time desc
   </select>

  <!--修改商品信息-->
  <update id="updateGoods" parameterType="com.xzsd.pc.goods.entity.GoodsInfo">
    update t_goods
    set
         goods_name = #{goodsName},
         cost_price = #{costPrice},
         sale_price = #{salePrice},
         sum_sale = #{sumSale},
         class_code = #{classCode},
         advertisement = #{advertisement},
         goods_introduce = #{goodsIntroduce},
         goods_state = #{goodsState},
         browse = #{browse},
         store_code = #{storeCode},
         stock = #{stock},
         isbn = #{isbn},
         author = #{author},
         publisher = #{publisher},
         imageurl = #{imageurl},
         update_name = #{updateName},
         update_time = now(),
         version = version + 1
    where goods_code = #{goodsCode}
    and version = #{version}
  </update>

    <!--检验删除的商品是否存在轮播图中-->
    <select id="findGoodsPicShow" parameterType="com.xzsd.pc.pictureShow.entity.PictureShowInfo" resultType="int">
        select count(a.goods_code)
        from
        t_picture_show a LEFT JOIN t_goods b
        on
        a.goods_code = b.goods_code
        where
        a.goods_code in
        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">
            #{item}
        </foreach>
        and
        a.is_deleted = 0
    </select>
    <!--检验删除的商品是否存在热门商品中-->
    <select id="findGoodsHotGoods" parameterType="com.xzsd.pc.pictureShow.entity.PictureShowInfo" resultType="int">
        select count(a.goods_code)
        from
        t_hot_goods a LEFT JOIN t_goods b
        on
        a.goods_code = b.goods_code
        where
        a.goods_code in
        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">
            #{item}
        </foreach>
        and
        a.is_deleted = 0
    </select>
    <!--删除商品-->
    <update id="deleteGoods" parameterType="com.xzsd.pc.goods.entity.GoodsInfo">
        update t_goods
        set
            is_deleted = 1,
            update_time = now(),
            update_name = #{userId},
            version = version + 1
        where goods_code in
        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!--修改商品上架下架-->
    <update id="updateGoodsState" parameterType="com.xzsd.pc.goods.entity.GoodsInfo">
        update t_goods
        set
            goods_state = #{goodsState},
            update_time = now(),
            update_name = #{userId},
            version = version + 1
        where goods_code in
        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">
            #{item}
        </foreach>

    </update>

    <!--查询商品信息-->
    <select id="getGoodsByGoodsCode" parameterType="java.lang.String" resultType="com.xzsd.pc.goods.entity.GoodsInfo">
        select
             goods_code goodsCode,
             goods_name goodsName,
             cost_price costPrice,
             sale_price salePrice,
             sum_sale sumSale,
             class_code classCode,
             advertisement,
             goods_introduce goodsIntroduce,
             goods_state goodsState,
             up_time upTime,
             browse,
             store_code storeCode,
             stock,
             isbn,
             author,
             publisher,
             imageurl,
             create_name createName,
             create_time createTime,
             version
         from t_goods
         where goods_code = #{goodsCode}
         and is_deleted = 0
    </select>

    <!--查询一级分类列表-->
    <select id="getFirstClass" parameterType="com.xzsd.pc.goodsclass.entity.GoodsClassInfo" resultType="com.xzsd.pc.goodsclass.entity.GoodsClassInfo">
        select
        a.class_name className,
        a.class_code classCode
        from
        t_goods_class a
        where a.is_deleted = 0
        and
        a.last_class_code is null
        <if test="classCode != null and classCode != ''">
            and a.class_code like concat('%', #{classCode}, '%')
        </if>
        <if test="className != null and className != ''">
            and a.class_name like concat('%', #{className}, '%')
        </if>
        order by create_time desc
    </select>

    <!--查询二级分类列表-->
    <select id="getSecondClass" parameterType="com.xzsd.pc.goodsclass.entity.GoodsClassInfo" resultType="com.xzsd.pc.goodsclass.entity.GoodsClassInfo">
        select
        a.class_name className,
        a.class_code classCode,
        a.last_class_code lastClassCode
        from
        t_goods_class a
        where a.is_deleted = 0
        <if test="classCode != null and classCode != ''">
            and a.class_code like concat('%', #{classCode}, '%')
        </if>
        <if test="className != null and className != ''">
            and a.class_name like concat('%', #{className}, '%')
        </if>
        <if test="lastClassCode != null and lastClassCode != ''">
            and a.last_class_code like concat('%', #{lastClassCode}, '%')
        </if>
    </select>
</mapper>