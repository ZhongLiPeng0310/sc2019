<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.pc.hotGoods.dao.HotGoodsDao">

    <!--检验商品是否已存在轮播图-->
    <select id="countGoods" parameterType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo" resultType="int">
        select count(goods_code)
        from t_hot_goods
        where is_deleted = 0
        and goods_code = #{goodsCode}
        <if test="hotCode != null and hotCode != ''">
            and hot_code != #{hotCode}
        </if>
    </select>

    <!--检验字典表中是否存在展示商品数量-->
    <select id="countShowNo" parameterType="com.xzsd.pc.dictionary.entity.DictionaryInfo" resultType="int">
        select count(mark)
        from t_dictionary
        where is_deleted = 0
        <if test="dicCode != null and dicCode != ''">
            and dic_code != #{dicCode}
        </if>
    </select>

    <!--新增热门商品-->
    <insert id="saveHotGoods" parameterType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo">
        insert into t_hot_goods
        (
        hot_code,
        goods_code,
        hot_sort,
        is_deleted,
        create_name,
        create_time,
        version
        )
        values
        (
        #{hotCode},
        #{goodsCode},
        #{hotSort},
        0,
        #{createName},
        now(),
        0
        )
    </insert>

    <!--查询热门商品列表-->
    <select id="listHotGoodsByPage" parameterType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo" resultType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo">
        select
        a.hot_code hotCode,
        a.hot_sort hotSort,
        b.goods_code goodsCode,
        b.goods_name goodsName,
        b.sale_price salePrice,
        b.goods_introduce goodsIntroduce
        from
        t_hot_goods a RIGHT JOIN t_goods b
        on a.goods_code = b.goods_code
        where a.is_deleted = 0
        <if test="hotCode != null and hotCode != ''">
            and a.hot_code like concat('%', #{hotCode}, '%')
        </if>
        <if test="goodsCode != null and goodsCode != ''">
            and a.goods_code like concat('%', #{goodsCode}, '%')
        </if>
        order by a.create_time desc
    </select>

    <!--删除热门商品-->
    <update id="deleteHotGoods" parameterType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo">
        update t_hot_goods
        set
        is_deleted = 1,
        update_time = now(),
        update_name = #{userId},
        version = version + 1
        where hot_code in
        <foreach item="item" index="index" collection="listCode" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!--修改热门商品信息-->
    <update id="updateHotGoods" parameterType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo">
        update t_hot_goods
        set
            goods_code = #{goodsCode},
            hot_sort = #{hotSort},
            update_time = now(),
            update_name   = #{updateName},
            version      = version + 1
        where hot_code = #{hotCode}
        and version = #{version}
    </update>

    <!--设置热门商品展示数量-->
    <insert id="saveShowNo" parameterType="com.xzsd.pc.dictionary.entity.DictionaryInfo">
        insert into
        t_dictionary
        (
        dic_code,
        dic_name,
        show_no,
        mark,
        is_deleted,
        create_time,
        create_name,
        version
        )
        VALUES
        (
        #{dicCode},
        #{dicName},
        #{showNo},
        0,
        #{isDeleted},
        now(),
        #{createName},
        0
        )
    </insert>

    <!--查询热门商品展示数量-->
    <select id="getShowNo" parameterType="com.xzsd.pc.dictionary.entity.DictionaryInfo" resultType="com.xzsd.pc.dictionary.entity.DictionaryInfo">
        select
        a.dic_code dicCode,
        a.dic_name dicName,
        a.show_no showNo,
        a.mark
        from
        t_dictionary a
        where
        a.mark = 0
        and
        a.is_deleted = 0
    </select>

    <!--更新热门商品展示数量-->
    <update id="updateShowNo" parameterType="com.xzsd.pc.dictionary.entity.DictionaryInfo">
        update t_dictionary
        set
        dic_name = #{dicName},
        show_no = #{showNo},
        update_time = now(),
        update_name = #{updateName},
        version = version + 1
        where
        mark = 0
        and version = #{version}
    </update>
</mapper>
